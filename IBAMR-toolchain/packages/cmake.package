MAJOR=3.20
MINOR=5
VERSION=${MAJOR}.${MINOR}

if [ ${CMAKE_LOAD_TARBALL} = ON ] && [ ${PLATFORM_OSTYPE} == "linux" ]; then
    # tarball install
    NAME=cmake-${VERSION}-linux-x86_64
    PACKING=.tar.gz
    CHECKSUM=3adc4d6ab87b8d3b46fb5fe98612dd84 # 3.20.5 tarball linux
    BUILDCHAIN=ignore
else
    # configure/make/install
    NAME=cmake-${VERSION}
    PACKING=.tar.gz
    CHECKSUM=137311bbe83d9a32469f99ac2792a2bc # 3.20.5 src

    if builtin command -v cmake > /dev/null; then
        # configure/make with cmake (older or newer version already installed)    
        BUILDCHAIN=cmake
    else
        # configure/make with autotools
        BUILDCHAIN=autotools
    fi
fi

SOURCE=https://cmake.org/files/v${MAJOR}/
# do not use NAME since we want this to always be the same
INSTALL_PATH=${INSTALL_PATH}/cmake-${VERSION}

if [ ${BUILDCHAIN} == "ignore" ]; then
    package_specific_install () {
        cp -rf ${UNPACK_PATH}/${EXTRACTSTO} ${INSTALL_PATH}
    }
fi

package_specific_register () {
    export PATH=${INSTALL_PATH}/bin:${PATH}
    export CMAKE_ROOT=${INSTALL_PATH}/share/${MAJOR}
}

package_specific_conf () {
    # Generate configuration file
    CONFIG_FILE=${CONFIGURATION_PATH}/cmake-${VERSION}
    rm -f $CONFIG_FILE
    echo "
export PATH=${INSTALL_PATH}/bin:\${PATH}
export CMAKE_ROOT=${INSTALL_PATH}/share/${MAJOR}
" >> $CONFIG_FILE
}
